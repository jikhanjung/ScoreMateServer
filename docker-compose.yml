services:
  db:
    image: postgres:13-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: scoremate
      POSTGRES_USER: scoremate
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432" # For local access if needed

  cache:
    image: redis:6-alpine
    ports:
      - "6379:6379" # For local access if needed

  storage:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001" # MinIO Console port
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001"

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - STORAGE_ENDPOINT=${STORAGE_ENDPOINT}
      - STORAGE_PUBLIC_ENDPOINT=${STORAGE_PUBLIC_ENDPOINT}
      - STORAGE_BUCKET=${STORAGE_BUCKET}
      - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
      - STORAGE_SECRET_KEY=${STORAGE_SECRET_KEY}
      - STORAGE_USE_SSL=${STORAGE_USE_SSL}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - MAX_UPLOAD_MB=${MAX_UPLOAD_MB}
      - ALLOWED_MIME=${ALLOWED_MIME}
      - REFERRAL_BONUS_MB=${REFERRAL_BONUS_MB}
    depends_on:
      - db
      - cache
      - storage

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    command: celery -A scoremateserver worker -l info
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - STORAGE_ENDPOINT=${STORAGE_ENDPOINT}
      - STORAGE_PUBLIC_ENDPOINT=${STORAGE_PUBLIC_ENDPOINT}
      - STORAGE_BUCKET=${STORAGE_BUCKET}
      - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
      - STORAGE_SECRET_KEY=${STORAGE_SECRET_KEY}
      - STORAGE_USE_SSL=${STORAGE_USE_SSL}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - MAX_UPLOAD_MB=${MAX_UPLOAD_MB}
      - ALLOWED_MIME=${ALLOWED_MIME}
      - REFERRAL_BONUS_MB=${REFERRAL_BONUS_MB}
    depends_on:
      - db
      - cache
      - storage
      - web # Ensure web is up for Django settings

  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    command: sh -c "npm ci && npm run dev -- --hostname 0.0.0.0"
    depends_on:
      - web

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443" # For HTTPS, if configured
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/certs:/etc/nginx/certs:ro # Uncomment for HTTPS
    depends_on:
      - web
      - frontend

volumes:
  db_data:
  minio_data:
  frontend_node_modules:
