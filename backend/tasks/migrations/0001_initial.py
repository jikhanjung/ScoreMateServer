# Generated by Django 5.2.5 on 2025-08-19 07:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scores', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('pdf_info', 'PDF Info Extraction'), ('thumbnail', 'Thumbnail Generation'), ('layout_hook', 'Layout Analysis Hook')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('SUCCEEDED', 'Succeeded'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('try_count', models.IntegerField(default=0)),
                ('celery_task_id', models.CharField(blank=True, help_text='Celery task UUID', max_length=255)),
                ('log', models.TextField(blank=True, help_text='Task execution log')),
                ('result_json', models.JSONField(blank=True, default=dict, help_text='Task result data')),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='scores.score')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tasks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='tasks_user_id_5e8fbe_idx'), models.Index(fields=['score', 'kind'], name='tasks_score_i_016afa_idx'), models.Index(fields=['status', '-created_at'], name='tasks_status_ec5702_idx'), models.Index(fields=['celery_task_id'], name='tasks_celery__c69876_idx')],
                'unique_together': {('score', 'kind')},
            },
        ),
    ]
